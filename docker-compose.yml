version: '3.7'
services:
  cat-init:
    build:
      context: ./
      dockerfile: ./deployments/Dockerfile
    environment:
      MYSQL_DATABASE: cats
      MYSQL_ROOT_USER: topcat
      MYSQL_ROOT_PASSWORD: Zaq!@wsx34
      MYSQL_HOST: db
    depends_on:
      - db
    restart: on-failure
    links:
      - db

  cat-api:
    image: golang:1.14
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: cats
      MYSQL_ROOT_USER: topcat
      MYSQL_ROOT_PASSWORD: Zaq!@wsx34
      MYSQL_HOST: db
    depends_on:
      - elasticsearch
      - db
    links:
      - db
    volumes:
      - ./:/go/src/github.com/willianccs/go-simple-app
      - ./logs/:/logs/
    working_dir: /go/src/github.com/willianccs/go-simple-app/pkg
    ports:
      - 10000:10000
    command: go run main.go

  db:
    image: mysql:8.0
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: cats
      MYSQL_ROOT_PASSWORD: q1w2e3
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 15
    ports:
      - 3306:3306
    volumes:
      - ./deployments/sql-scripts:/docker-entrypoint-initdb.d
      - simple-app-data:/var/lib/mysql

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./deployments/grafana/config.ini:/etc/grafana/config.ini
      - ./deployments/grafana/provisioning:/etc/grafana/provisioning
      - ./deployments/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./deployments/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    container_name: prometheus
    extra_hosts:
      host.docker.internal: 172.17.0.1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    restart: unless-stopped
    volumes:
      - ./deployments/elk/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - 9200:9200
    environment:
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: -Xms256m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    restart: unless-stopped
    volumes:
      - ./deployments/elk/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:6.5.1
    restart: unless-stopped
    depends_on:
      - elasticsearch
    volumes:
      - ./deployments/elk/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs/:/logs/

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    restart: unless-stopped
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
      interval: 3s
      timeout: 3s
      retries: 50
    ports:
      - 5601:5601

volumes:
  simple-app-data:
  grafana-data:

networks:
  default:
    driver: bridge